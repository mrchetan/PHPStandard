<?xml version="1.0" encoding="UTF-8"?>
<ruleset name="mr-chetan-ruleset" namespace="MrChetan\Standard">

    <!-- PSR1 Rule set -->
    <rule ref="PSR1"/>

    <!--
        ***********************************************************************
        *   Arrays Rule set
        ***********************************************************************
     -->

    <!-- Generic -->
    <rule ref="Generic.Arrays.ArrayIndent">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- Squiz -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Arrays.ArrayDeclaration">
        <exclude name="Squiz.Arrays.ArrayDeclaration.CloseBraceNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.DoubleArrowNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.KeyNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.ValueNotAligned"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.MultiLineNotAllowed"/>
        <exclude name="Squiz.Arrays.ArrayDeclaration.SingleLineNotAllowed"/>
    </rule>

    <!--
        ***********************************************************************
        *   Classes Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="PSR2.Classes.PropertyDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.Classes.AnonClassDeclaration"/>
    <rule ref="PSR12.Classes.ClosingBrace"/>

    <!-- Squiz -->
    <rule ref="Squiz.Classes.ClassDeclaration"/>
    <rule ref="Squiz.Classes.ClassFileName"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>
    <rule ref="Squiz.Classes.ValidClassName"/>

    <!--
        ***********************************************************************
        *   Code Analysis Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.CodeAnalysis.AssignmentInCondition"/>
    <rule ref="Generic.CodeAnalysis.EmptyPHPStatement"/>
    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>
    </rule>
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter">
        <properties>
            <property name="ignoreTypeHints" type="array">
                <element value="InputInterface"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

    <!--
        ***********************************************************************
        * Commenting Rule set
        ***********************************************************************
    -->
    <!-- Generic -->
    <rule ref="Generic.Commenting.DocComment">
        <exclude name="Generic.Commenting.DocComment.MissingShort"/>
        <exclude name="Generic.Commenting.DocComment.NonParamGroup"/>
        <exclude name="Generic.Commenting.DocComment.TagValueIndent"/>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.Commenting.Fixme">
        <type>warning</type>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.Commenting.Todo">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.Commenting.BlockComment">
        <exclude name="Squiz.Commenting.BlockComment.FirstLineIndent"/>
        <exclude name="Squiz.Commenting.BlockComment.LineIndent"/>
    </rule>
    <rule ref="Squiz.Commenting.ClassComment">
        <exclude name="Squiz.Commenting.ClassComment.Missing" />
        <exclude name="Squiz.Commenting.ClassComment.TagNotAllowed" />
    </rule>
    <rule ref="Squiz.Commenting.DocCommentAlignment">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.Commenting.EmptyCatchComment"/>
    <rule ref="Squiz.Commenting.FunctionCommentThrowTag"/>
    <rule ref="Squiz.Commenting.InlineComment">
        <exclude name="Squiz.Commenting.InlineComment.InvalidEndChar"/>
        <exclude name="Squiz.Commenting.InlineComment.Empty"/>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.Commenting.VariableComment">
        <exclude name="Squiz.Commenting.VariableComment.IncorrectVarType"/>
        <exclude name="Squiz.Commenting.VariableComment.TagNotAllowed"/>
        <exclude name="Squiz.Commenting.VariableComment.Missing"/>
    </rule>

    <!--
        ***********************************************************************
        * Control Structures Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.ControlStructures.ControlStructureSpacing">
        <exclude name="PSR2.ControlStructures.ControlStructureSpacing.SpacingAfterOpenBrace"/>
        <properties>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
        </properties>
    </rule>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.ControlStructures.BooleanOperatorPlacement">
        <properties>
            <property name="allowOnly" value=""/>
        </properties>
    </rule>
    <rule ref="PSR12.ControlStructures.ControlStructureSpacing">
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing.FirstExpressionLine"/>
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing.CloseParenthesisLine"/>
        <exclude name="PSR12.ControlStructures.ControlStructureSpacing.LineIndent"/>
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <!-- Generic -->
    <rule ref="Generic.ControlStructures.InlineControlStructure">
        <properties>
            <property name="error" value="true"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.ControlStructures.ControlSignature">
        <properties>
            <property name="requiredSpacesBeforeColon" value="1"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration">
        <!-- exclude this message as it is already checked in Generic.PHP.LowerCaseKeyword -->
        <exclude name="Squiz.ControlStructures.ForEachLoopDeclaration.AsNotLower"/>
        <properties>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration">
        <properties>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
            <property name="ignoreNewlines" value="false"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>
    <rule ref="Squiz.ControlStructures.SwitchDeclaration">
        <exclude name="Squiz.ControlStructures.SwitchDeclaration.BreakIndent"/>
        <properties>
            <property name="indent" value="4"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Files Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Files.ClosingTag"/>
    <rule ref="PSR2.Files.EndFileNewline"/>

    <!-- PSR12 -->
    <rule ref="PSR12.Files.DeclareStatement"/>
    <rule ref="PSR12.Files.FileHeader"/>
    <rule ref="PSR12.Files.ImportStatement"/>

    <!-- Generic -->
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="ignoreComments" value="true" />
            <property name="lineLimit" value="120"/>
            <property name="absoluteLineLimit" value="0"/>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Formatting Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.MultipleStatementAlignment">
        <exclude name="Generic.Formatting.MultipleStatementAlignment.NotSame"/>
        <properties>
            <property name="maxPadding" value="12"/>
            <property name="error" value="true"/>
            <property name="alignAtEnd" value="true"/>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterCast">
        <properties>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterNot">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="spacing" value="1"/>
            <property name="ignoreNewlines" value="false"/>
        </properties>
    </rule>

    <!-- PEAR -->
    <rule ref="PEAR.Formatting.MultiLineAssignment">
        <properties>
            <property name="indent" value="4"/>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Functions Rule set
        ***********************************************************************
    -->

    <!-- PSR12  -->
    <rule ref="PSR12.Functions.NullableTypeDeclaration"/>
    <rule ref="PSR12.Functions.ReturnTypeDeclaration"/>

    <!-- Generic -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman">
        <properties>
            <property name="checkFunctions" value="true"/>
            <property name="checkClosures" value="false"/>
        </properties>
    </rule>

    <!-- PEAR -->
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="PEAR.Functions.FunctionCallSignature">
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine"/>
        <exclude name="PEAR.Functions.FunctionCallSignature.Indent"/>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="indent" value="4"/>
            <property name="allowMultipleArguments" value="true"/>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
        </properties>
    </rule>

    <!-- Squiz -->
     <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
            <property name="requiredSpacesAfterOpen" value="0"/>
            <property name="requiredSpacesBeforeClose" value="0"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <rule ref="Squiz.Functions.FunctionDuplicateArgument"/>
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration">
        <exclude name="Squiz.Functions.MultiLineFunctionDeclaration.NewlineBeforeOpenBrace"/>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Keywords Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Keywords.ShortFormTypeKeywords"/>

    <!--
        ***********************************************************************
        * Operators Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Operators.OperatorSpacing"/>

    <!-- Squiz -->
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>

    <!--
        ***********************************************************************
        * Methods Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Methods.MethodDeclaration.Underscore">
        <type>error</type>
    </rule>

    <!--
        ***********************************************************************
        * Metrics Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Metrics.CyclomaticComplexity">
        <properties>
            <property name="complexity" value="10"/>
            <property name="absoluteComplexity" value="20"/>
        </properties>
    </rule>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="5"/>
            <property name="absoluteNestingLevel" value="10"/>
        </properties>
    </rule>

    <!--
        ***********************************************************************
        * Namespaces Rule set
        ***********************************************************************
    -->

    <!-- PSR2 -->
    <rule ref="PSR2.Namespaces.NamespaceDeclaration"/>
    <rule ref="PSR2.Namespaces.UseDeclaration">
        <exclude name="PSR2.Namespaces.UseDeclaration.MultipleDeclarations"/>
    </rule>

    <!-- PSR12 -->
    <rule ref="PSR12.Namespaces.CompoundNamespaceDepth">
        <properties>
            <property name="maxDepth" value="2"/>
        </properties>
    </rule>


    <!--
        ***********************************************************************
        * Naming Conventions Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.NamingConventions.CamelCapsFunctionName">
        <properties>
            <property name="strict" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <!-- Squiz -->
    <rule ref="Squiz.NamingConventions.ValidFunctionName">
        <exclude name="Squiz.NamingConventions.ValidFunctionName.PrivateNoUnderscore"/>
    </rule>
    <rule ref="Squiz.NamingConventions.ValidVariableName">
        <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
        <exclude name="Squiz.NamingConventions.ValidVariableName.MemberNotCamelCaps"/>
    </rule>

    <!--
        ***********************************************************************
        * Objects Rule set
        ***********************************************************************
    -->

    <!-- Squiz -->
    <rule ref="Squiz.Objects.ObjectInstantiation">
        <exclude name="Squiz.Objects.ObjectInstantiation.NotAssigned"/>
    </rule>

    <!-- -->
    <!--
        ***********************************************************************
        * PHP Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.PHP.BacktickOperator"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.DiscourageGoto"/>
    <rule ref="Generic.PHP.ForbiddenFunctions">
        <properties>
            <property name="forbiddenFunctions" type="array">
                <element key="sizeof" value="count"/>
                <element key="delete" value="unset"/>
                <element key="dd" value="null"/>
                <element key="dump" value="null"/>
                <element key="var_dump" value="null"/>
                <element key="ray" value="null"/>
            </property>
            <property name="error" value="true"/>
        </properties>
    </rule>
    <rule ref="Generic.PHP.LowerCaseConstant">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.LowerCaseType"/>
    <rule ref="Generic.PHP.NoSilencedErrors">
        <properties>
            <property name="error" value="true"/>
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.PHP.InnerFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>

    <!--
        ***********************************************************************
        * Strings Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.Strings.UnnecessaryStringConcat">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="allowMultiline" value="true" />
            <property name="error" value="false" />
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.Strings.DoubleQuoteUsage">
        <exclude name="Squiz.Strings.DoubleQuoteUsage.ContainsVar"/>
    </rule>

    <!--
        ***********************************************************************
        * Scope Rule set
        ***********************************************************************
    -->

    <!-- Squiz -->
    <rule ref="Squiz.Scope.MemberVarScope"/>
    <rule ref="Squiz.Scope.MethodScope"/>

    <!--
        ***********************************************************************
        * Traits Rule set
        ***********************************************************************
    -->

    <!-- PSR12 -->
    <rule ref="PSR12.Traits.UseDeclaration">
        <exclude name="PSR12.Traits.UseDeclaration.MultipleImport"/>
    </rule>

    <!--
        ***********************************************************************
        * Version Control Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.VersionControl.GitMergeConflict">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>


    <!--
        ***********************************************************************
        * WhiteSpace Rule set
        ***********************************************************************
    -->

    <!-- Generic -->
    <rule ref="Generic.WhiteSpace.ArbitraryParenthesesSpacing">
        <properties>
            <property name="spacing" value="0"/>
            <property name="ignoreNewlines" value="false"/>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.DisallowTabIndent">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.IncrementDecrementSpacing">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="indent" value="4"/>
            <property name="exact" value="false"/>
            <property name="ignoreIndentationTokens" type="array">
                <element value="T_COMMENT"/>
                <element value="T_DOC_COMMENT_OPEN_TAG"/>
            </property>
        </properties>
    </rule>
    <rule ref="Generic.WhiteSpace.SpreadOperatorSpacingAfter">
        <properties>
            <property name="spacing" value="0"/>
            <property name="ignoreNewlines" value="false"/>
        </properties>
    </rule>

    <!-- PEAR -->
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent">
        <exclude name="PEAR.WhiteSpace.ObjectOperatorIndent.Incorrect"/>
        <properties>
            <property name="indent" value="4"/>
            <property name="multilevel" value="false"/>
        </properties>
    </rule>

    <!-- Squiz -->
    <rule ref="Squiz.WhiteSpace.CastSpacing"/>
    <rule ref="Squiz.WhiteSpace.ControlStructureSpacing">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionClosingBraceSpace">
        <exclude name="Squiz.WhiteSpace.FunctionClosingBraceSpace.SpacingBeforeClose"/>
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing" >
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
            <property name="spacingAfterLast" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="spacingBeforeFirst" value="0" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="ignoreNewlines" value="true" />
            <property name="ignoreSpacingBeforeAssignments" value="true" />
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.SemicolonSpacing">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="supportedTokenizers" type="array">
                <element value="PHP"/>
            </property>
            <property name="ignoreBlankLines" value="false" />
        </properties>
    </rule>

    <!-- ignore patterns  -->
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*.blade.php</exclude-pattern>
</ruleset>
